1) Launch core-minimal
cd core_docker
./run.sh --image core-minimal

2) Inside the container, prep & mount the test bucket
sudo apt update
sudo apt install -y nfs-common
sudo mkdir -p /mnt/ics-test-dev
sudo mount -t nfs -o nolock,hard 10.55.20.26:/ics-test-dev /mnt/ics-test-dev


If mount fails, your VM IP must be whitelisted. Ping the owner mentioned in the wiki.

3) Define paths (same names as the wiki)
export SRC=/mnt/ics-test-dev/Staging/Newmont/Tamani
export DEST=/mnt/ia/logs/cfu/unpacked/hlogcopy_test
mkdir -p "$DEST"

4) hlogtool checks (capture screenshots)
hlogtool -c "$SRC"
hlogtool -k "$SRC"

5) Unpack & index logs (capture screenshot of completion + tree)
hlogcopy -a -m "$SRC" "$DEST"
ls -R "$DEST" | head -100

6) (Optional, if shown in your wiki) snapshot ops
hlogsnapshot -l "$DEST"
hlogsnapshot -l -v "$DEST"

7) Convert a log to ROS bag (if your page includes this step)
# pick one unpacked .hlog under $DEST (adjust the filename you see)
convertHlogToRosbag --hlog "$DEST/<some_log>.hlog" --out "$DEST/rosbags"
ls -l "$DEST/rosbags"

8) Visualize in Webviz (host machine)
docker run --rm -p 8081:8080 \
  -v C:\core-docker-data\unpacked:/data \
  ghcr.io/cruise-automation/webviz:latest


Open http://localhost:8081

Drag a .bag from C:\core-docker-data\unpacked\hlogcopy_test\rosbags\

Paste the “Appendix A – Webviz config” JSON from your wiki

Screenshot the rendered plot

What to attach to the ticket (DoD)

Terminal showing ./run.sh --image core-minimal and successful NFS mount.

hlogtool -k $SRC output (channel list like in the wiki).

hlogcopy -a -m $SRC $DEST completion + ls -R $DEST tree.

(If run) hlogsnapshot -l output.

Webviz screenshot with the provided config showing the plot/trajectory.

Quick fixes

mount fails → IP not whitelisted or NFS blocked; get the VM IP whitelisted.

hlogtool shows nothing → wrong SRC; verify with ls -R $SRC.

Webviz blank → ensure bags exist in $DEST/rosbags and you dragged a real .bag.

Run those blocks top to bottom and you’re done. If any command errors, paste the exact line + error and I’ll
################################################################################################
# 1. Update packages
sudo apt-get update
sudo apt-get install -y ca-certificates curl gnupg lsb-release

# 2. Add Docker’s official GPG key
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

# 3. Add Docker’s official repository
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# 4. Update again and install Docker
sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# 5. Add your user to docker group (so you don’t need sudo each time)
sudo usermod -aG docker $USER
newgrp docker

# 6. Test
docker --version
docker run hello-world

